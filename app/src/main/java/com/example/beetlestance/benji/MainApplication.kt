package com.example.beetlestance.benji

import android.content.Context
import com.example.beetlestance.benji.di.DaggerAppComponent
import com.example.beetlestance.benji.di.AppComponent
import dagger.android.AndroidInjector
import dagger.android.DaggerApplication

/**
 * Initialization of libraries.
 */

class MainApplication : DaggerApplication() {

    /**
     * Tell Dagger which [AndroidInjector] to use - in our case
     * [AppComponent]. `DaggerAppComponent`
     * is a class generated by Dagger based on the `AppComponent` class.
     */
    companion object {
        private lateinit var appContext: Context

        fun getContext(): Context {
            return appContext
        }


    }
    init {
        appContext = this
    }
    override fun onCreate() {
        super.onCreate()

    }

    override fun applicationInjector(): AndroidInjector<out DaggerApplication> {
        return DaggerAppComponent.builder().create(this)
    }

}